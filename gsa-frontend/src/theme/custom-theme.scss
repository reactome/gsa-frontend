// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use "palette" as p;
@use "variables";
@use 'sass:map';
@use 'theme-helper';

$bg-color: map.get(p.$primary-colors, 990);


// Plus imports for other components in your app.


// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.typography-hierarchy(mat.define-typography-config());`
@include mat.all-component-typographies();
@include mat.core();

// The following mixins include base theme styles that are only needed once per application. These
// theme styles do not depend on the color, typography, or density settings in your theme. However,
// these styles may differ depending on the theme's design system. Currently all themes use the
// Material 2 design system, but in the future it may be possible to create theme based on other
// design systems, such as Material 3.
//
// Please note: you do not need to include the 'base' mixins, if you include the corresponding
// 'theme' mixin elsewhere in your Sass. The full 'theme' mixins already include the base styles.
//
// To learn more about "base" theme styles visit our theming guide:
// https://material.angular.io/guide/theming#theming-dimensions
//
// TODO(v17): Please move these @include statements to the preferred place in your Sass, and pass
// your theme to them. This will ensure the correct values for your app are included.
@include mat.all-component-bases(/* TODO(v17): pass $your-theme here */);



// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary-palette: mat.define-palette(p.$primary-colors, 600);
$secondary-palette: mat.define-palette(p.$secondary-colors, 600);
$tertiary-palette: mat.define-palette(p.$tertiary-colors, 600);

// The warn palette is optional (defaults to red).
$error-palette: mat.define-palette(p.$error-colors);
$neutral-palette: mat.define-palette(p.$neutral-colors);
$neutral-variant-palette: mat.define-palette(p.$neutral-variant-colors);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$light-theme: mat.define-light-theme((
  color: (
    primary: $primary-palette,
    accent: $tertiary-palette,
    warn: $error-palette,
  ),
  density: -1
));

$dark-theme: mat.define-dark-theme((
  color: (
    primary: mat.define-palette(p.$primary-colors, 200),
    accent: mat.define-palette(p.$tertiary-colors, 200),
    warn: mat.define-palette(p.$error-colors, 200),
  )
));

$palettes: (
  primary-palette: $primary-palette,
  secondary-palette: $secondary-palette,
  tertiary-palette: $tertiary-palette,
  error-palette: $error-palette,
  neutral-palette: $neutral-palette,
  neutral-variant-palette: $neutral-variant-palette
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($light-theme);

@include mat.core-theme($light-theme);
@include mat.card-theme($light-theme);
@include mat.progress-bar-theme($light-theme);
@include mat.tooltip-theme($light-theme);
@include mat.form-field-theme($light-theme);
@include mat.input-theme($light-theme);
@include mat.select-theme($light-theme);
@include mat.dialog-theme($light-theme);
@include mat.slide-toggle-theme($light-theme);
@include mat.checkbox-theme($light-theme);
@include mat.button-theme($light-theme);
@include mat.icon-button-theme($light-theme);
@include mat.fab-theme($light-theme);
@include mat.snack-bar-theme($light-theme);
@include mat.progress-spinner-theme($light-theme);
@include mat.divider-theme($light-theme);
@include mat.expansion-theme($light-theme);
@include mat.icon-theme($light-theme);
@include mat.stepper-theme($light-theme);
@include mat.menu-theme($light-theme);


//@include nested-stepper.theme($light-theme);
$bg-color: map.get(p.$primary-colors, 010);

$color-config: mat.get-color-config($light-theme);



// Apply the dark theme only when the user prefers dark themes.
.dark {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  $bg-color: map.get(p.$primary-colors, 950);

  $dark-theme: theme-helper.modify-background($dark-theme, p.$dark-theme-background-palette);
  $dark-theme: theme-helper.modify-foreground($dark-theme, p.$dark-theme-foreground-palette);

  $color-config: mat.get-color-config($dark-theme);
  @include mat.all-component-colors($dark-theme);

  @include mat.core-color($dark-theme);
  @include mat.card-color($dark-theme);
  @include mat.progress-bar-color($dark-theme);
  @include mat.tooltip-color($dark-theme);
  @include mat.form-field-color($dark-theme);
  @include mat.input-color($dark-theme);
  @include mat.select-color($dark-theme);
  @include mat.dialog-color($dark-theme);
  @include mat.slide-toggle-color($dark-theme);
  @include mat.checkbox-color($dark-theme);
  @include mat.button-color($dark-theme);
  @include mat.icon-button-color($dark-theme);
  @include mat.fab-color($dark-theme);
  @include mat.snack-bar-color($dark-theme);
  @include mat.progress-spinner-color($dark-theme);
  @include mat.divider-color($dark-theme);
  @include mat.expansion-color($dark-theme);
  @include mat.icon-color($dark-theme);
  @include mat.stepper-color($dark-theme);
  @include mat.menu-color($dark-theme);

}

@include variables.theme($palettes);



